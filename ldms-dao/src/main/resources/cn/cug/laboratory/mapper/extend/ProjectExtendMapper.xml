<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cug.laboratory.mapper.extend.ProjectExtendMapper" >
  <resultMap id="BaseResultMap" type="cn.cug.laboratory.model.persistent.Project" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="lab_id" property="labId" jdbcType="CHAR" />
    <result column="tea_id" property="teaId" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="capacity" property="capacity" jdbcType="INTEGER" />
    <result column="left_capacity" property="leftCapacity" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="SMALLINT" />
    <result column="credit" property="credit" jdbcType="REAL" />
    <result column="submit_time" property="submitTime" jdbcType="TIMESTAMP" />
    <result column="pass_time" property="passTime" jdbcType="TIMESTAMP" />
    <result column="devices" property="devices" jdbcType="VARCHAR" />
    <result column="files" property="files" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="GroupResultMap" type="cn.cug.laboratory.model.extend.ProjectExtend" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="tea_name" property="teacherName" jdbcType="CHAR" />
        <result column="lab_name" property="labName" jdbcType="CHAR" />
        <result column="project_name" property="name" jdbcType="VARCHAR" />
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
        <result column="capacity" property="capacity" jdbcType="INTEGER" />
        <result column="left_capacity" property="leftCapacity" jdbcType="INTEGER" />
    </resultMap>

  <resultMap id="ResultMapWithBLOBs" type="cn.cug.laboratory.model.persistent.Project" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, lab_id, tea_id, name, start_time, end_time, capacity, left_capacity,state, credit, submit_time,
    pass_time, devices, files
  </sql>

  <sql id="Blob_Column_List" >
    description
  </sql>

    <!-- 定义项目查询的sql片段，就是商品查询条件 -->
    <sql id="project_query_lists">
        <!---->
        <if test="id != null">
            AND project.`id` = #{id}
        </if>
        <if test="name != null">
            AND project.`name` like '%${name}%'
        </if>
        <if test="teacherName != null">
            AND teacher.`name`  like '%${teacherName}%'
        </if>
        AND state = #{state}
        limit #{startSite},#{pageNum}
    </sql>

    <!-- 定义项目查询 -->
    <select id="selectByMultipleInfo"
            parameterType="cn.cug.laboratory.model.extend.ProjectExtend"
            resultType="cn.cug.laboratory.model.extend.ProjectExtend">
        SELECT
        project.`id` 'id',
        project.`name` 'name',
        project.`start_time` 'startTime',
        teacher.`name` 'teacherName',
        project.state 'state'
        FROM
        project,
        teacher
        <where>
            <include refid="project_query_lists"></include>
        </where>
    </select>


  <select id="selectByTeaId" resultMap="GroupResultMap" >
   select project.id,teacher.`name` 'tea_name',lab.`name` 'lab_name',project.`name` 'project_name',project.start_time,project.end_time,project.capacity,project.left_capacity
    from project,teacher,lab
    where project.lab_id=lab.id and project.tea_id=teacher.id
      and tea_id= #{teaId,jdbcType=CHAR}
    order by id
    limit #{startSite},#{pageNum}
  </select>

  <select id="selectCountByTeaId" resultType="java.lang.Integer">
    select count(*)
    from project
    where tea_id= #{teaId,jdbcType=CHAR}
  </select>

  <select id="selectByName" resultMap="GroupResultMap ">
   select project.id,teacher.name 'tea_name',lab.name 'lab_name',project.name 'project_name',project.start_time,project.end_time,project.capacity,project.left_capacity
    from project,teacher,lab
    where project.lab_id=lab.id and project.tea_id=teacher.id
     and  project.name = #{name,jdbcType=VARCHAR}
    order by id
    limit #{startSite},#{pageNum}
  </select>

  <select id="selectCountByName" resultType="java.lang.Integer">
    select count(*)
    from project,teacher,lab
    where project.lab_id=lab.id and project.tea_id=teacher.id
     and  project.name = #{name,jdbcType=VARCHAR}
  </select>


  <select id="reduceLeft"  parameterType="java.lang.String">
    update project
    set left_capacity=left_capacity-1
    where id= #{id}
  </select>

  <select id="addLeft"  parameterType="java.lang.String">
    update project
    set left_capacity=left_capacity+1
    where id= #{id}
  </select>
</mapper>